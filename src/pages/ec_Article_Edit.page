<apex:page controller="cms.CreateContentController" extensions="ec_Article" showHeader="false" sidebar="false" cache="false" title="Orchestra CMS" standardStylesheets="false">
    <apex:outputPanel layout="block">
        <link href="{!URLFOR($Resource.ec_slds, '/assets/styles/salesforce-lightning-design-system.css')}" rel="stylesheet" />
        <link href="{!URLFOR($Resource.ec_ContentEditorFixes)}" rel="stylesheet" />
        <script src="{!URLFOR($Resource.ec_sldsIconSelectorWidget)}" type="text/javascript" />

        <style>
            .ui-dialog img {        /* override slds's img max-width: 100% for OrchestraCMS media selector dialogue (and others?) */
                max-width: none;
            }

            /* Fix Image Loader alignment */
            #imageInputimageInput1 .ui-button:first-of-type,
            #imageInputimageInput2 .ui-button:first-of-type {
                margin-left: 10px;
            }

            #articleSummary {
                height: 4rem !important;    /* overriding an ocms-input rule… */
                width: 50rem !important;    /* …and some in-line styles? */
            }


            /* hide the "Listable Template" label that comes with the content template selector */
            #detailContentTemplate label {
                display: none;
            }
        </style>

        <script type="text/javascript">
            function removeNL(s){
                return s.replace(/[\n\r\t]/g, '');
            }

            function saveFunction() {
                function contentChunkName() {
                    return 'HTMLContent' + (chunk === 1 ? '' : '_' + chunk.toString());
                }

                var attributes = [];

                // save the article content in a series of related attributes
                var htmlContentFull = removeNL(CKEDITOR.instances.HTMLContent.getData());
                var maxChunks = {!maxChunks};
                var chunk = 1;

                do {
                    if (htmlContentFull.length <= 32768) {
                        attributes.push({name: contentChunkName(), value: htmlContentFull, type: "Text"});
                        htmlContentFull = '';
                    } else {
                        attributes.push({name: contentChunkName(), value: htmlContentFull.substr(0, 32768), type: "Text"});
                        htmlContentFull = htmlContentFull.substr(32768);
                    }
                    chunk++;

                } while (chunk <= maxChunks && htmlContentFull.length > 0);
                // always "write" an empty chunk at end of content

                attributes.push({name: contentChunkName(), value: '', type: "Text"});
                attributes.push({name: "articleType", value: $('#articleType').val(), type: "Text"});
                attributes.push({name: "articleDetail", value: $('#articleDetail').val(), type: "Text"});
                attributes.push({name: "ImageId", value: $('#ImageIdInput').val(), type: "Text"});
                attributes.push({name: "LargeImageId", value: $('#LargeImageIdInput').val(), type: "Text"});
                attributes.push({name: "Headline", value: removeNL($('#Headline').val()), type: "Text"});
                attributes.push({name: "SummaryContent", value: removeNL($('#SummaryContent').val()), type: "Text"});
                attributes.push({name: "AltImageText", value: $('#AltImageText').val(), type: "Text"});
                attributes.push({name: "TitleImageText", value: $('#TitleImageText').val(), type: "Text"});
                attributes.push({name: "iconType", value:$('.sldsIconContainer').sldsIconSelector('getIconType'), type:"Text", simple:true});
                attributes.push({name: "iconName", value:$('.sldsIconContainer').sldsIconSelector('getIconName'), type:"Text", simple:true});

                attributes.push({name: "newsArea", value: $('#newsArea').val(), type: "Text"});

                // is this API correct?  @TODO!
                attributes.push({name: 'detailContentLayout', value: $('#detailContentTemplate select').val(), type:"Text", simple:true});

                return attributes;
            }

            $(document).ready(function() {
                $('.sldsIconContainer').sldsIconSelector({
                    iconType: '{!iconType}',
                    iconName: '{!iconName}',
                    sldsPath: '{!URLFOR($Resource.ec_slds)}',
                    disable: {!disableAll}
                });

                // yes, one is disable, other disabled

                $('#detailContentTemplate').content_template_selector({
                    selectedContentTypes: '{!contentTypeId}',
                    selectedContentTemplates: '{!detailContentLayout}',
                    multiselect: false,
                    disabled: {!disableAll}     // INEFFECTIVE!   TODO Bug Report
                });

                $('#generate-text').click(function(){
                    var htmldata=$('<span>' +removeNL(CKEDITOR.instances.HTMLContent.getData()) + '</span>').text();

                    if (htmldata !=null && htmldata !=''){
                        if (htmldata.length > 300) {
                            htmldata = htmldata.substring(0, 300);
                        }
                        $('#SummaryContent').val(htmldata);

                        var nChars = 300 - htmldata.length;
                        $('#charCount').text(nChars);
                        if (nChars < 0) {
                            $('#charCount').text(0);
                        }
                    }
                });

                // registerBindings is broken in W17 #8.41, should be fixed in #8.42
                var theBindings = {
                    "Publish": function(actionBar, action){
                        return validatePublishAction();
                    },
                    "SendForApproval": function(actionBar, action){
                        return validatePublishAction();
                    }
                };
                ce.content_editor('registerBindings', theBindings);
                ce.content_editor('registerSaveFunction', saveFunction);

                if ({!disableAll}) {
                    // published or locked or whatever - do not allow editing
                    // #detailContentTemplate’s select ignores disabled parameter
                    $('select').prop('disabled', true);
                } else {
                    // initialize for editable content
                    CKEDITOR.replace('HTMLContent', {
                        enterMode : CKEDITOR.ENTER_P
                    });
                    CKEDITOR.config.bodyClass = 'fullArticle';

                    // have to add these frickin' handlers for our Generate Text button
                    $('#btnGenerateText')
                        .removeClass('btn')
                        .hover(function() { $(this).addClass('ui-state-hover'); },
                            function() { $(this).removeClass('ui-state-hover'); })
                        .mousedown(function() { $(this).addClass('ui-state-active'); })
                        .mouseup(function() { $(this).removeClass('ui-state-active'); });
                }

                // TODO better factoring to be stolen from in ec_Policy_Edit.page
                $("#SummaryContent").keyup(function () {
                    var sSummary = $(this).val();
                    var nChars = 300 - sSummary.length;
                    $("#charCount").text(nChars);

                    if (nChars < 0) {
                        $(this).val(sSummary.substr(0, 300)).scrollTop($(this)[0].scrollHeight);
                        $("#charCount").text(0);
                    }
                }).keyup();

                $("#SummaryContent").bind('cut copy paste', function() {
                    setTimeout(function() {
                        var sSummary = $('#SummaryContent').val();
                        var nChars = 300 - sSummary.length;
                        $("#charCount").text(nChars);
                        if (nChars < 0) {
                            $(this).val(sSummary.substr(0, 300)).scrollTop($(this)[0].scrollHeight);
                            $("#charCount").text(0);
                        }
                    }, 0);
                });
            });


            function validatePublishAction() {
                var sMessage = 'The following fields must not be left blank',
                    missingFields = '',
                    success = true;

                if ($('#Headline').val() == null || $('#Headline').val() == ''){
                    missingFields += ' :Headline ';
                    success = false;
                }

                var body = CKEDITOR.instances.HTMLContent.getData();

                body = body.trim();

                var maxBody = {!maxChunks} * 32768; // should now be 128 KiB
                if (body.length > maxBody) {
                    bodyTooBig = '<br/>Sorry, the article body has exceeded the maximum length of ' + maxBody + ' characters';
                }

                if (body == null || body == '' || body == '<br />'){
                    missingFields += ' :Body';
                    success = false;
                }
                if ($('#SummaryContent').val() == null || $('#SummaryContent').val() == '') {
                    missingFields += ' :Summary';
                    success = false;
                }

                if (!success) {
                    $('#messagePane').ocmsShowErrorPopup({
                        title: 'Error',
                        message: sMessage + missingFields,
                        width: 400
                    });
                }

                return success;
            }
            //# sourceURL=articleEditScript
        </script>


        <div id="messagePane"></div>
        <table class="ocmsContentEditor ocmsContentEditorNested">
            <tr><td>
                <label class="ocmsLabel">Lightning Experience icon</label>
                <div class="sldsIconContainer"></div>
            </td></tr>

            <tr><td>
                <label class="ocmsLabel" for="articleType">Article Type</label>
                <input type="text" value="{!articleType}" name="articleType" id="articleType" size="60" />
                <p class="ocmsHelpText"> Arbitrary Article “type” e.g. Article, Blog Post, Message from the CEO, etc.</p>
            </td></tr>

            <tr>
                <td>
                    <label class="ocmsLabel ocmsRequiredLabel" for="Headline">Headline</label>
                    <apex:outputText escape="false" rendered="{!disableAll}">
                        <textarea  rows="2" cols="70" id="Headline" name="Headline" disabled="disabled"><apex:outputText value="{!Headline}" /></textarea>
                    </apex:outputText>
                    <apex:outputText escape="false" rendered="{!!disableAll}">
                        <textarea class="validatearticleinput" rows ="2" cols="70" id="Headline" name="Headline"><apex:outputText value="{!Headline}" /></textarea>
                    </apex:outputText>
                </td>
            </tr>
            <tr>
                <td>
                    <label class="ocmsLabel ocmsRequiredLabel" for="HTMLContent">Body Text</label>
                    <apex:outputText escape="false" rendered="{!!disableAll}">
                        <textarea  class="validatearticleinput" name="HTMLContent" id="HTMLContent" ><apex:outputText value="{!HTMLContent}" /></textarea>
                    </apex:outputText>
                    <apex:outputPanel id="o1" layout="block" rendered="{!disableAll}" style="padding: 5px; border: 1px solid #DEDEDE;">
                        <apex:outputText escape="false" value="{!HTMLContent}" id="DocumentContentView" />
                    </apex:outputPanel>
                </td>
            </tr>
            <tr class="ocmsEditorSubtitle">
                <td colspan="2">Article Summary</td>
            </tr>
            <tr>
                <td>
                    <label class="ocmsLabel ocmsRequiredLabel" for="SummaryContent">Text</label>
                    <apex:outputText escape="false" rendered="{!!disableAll}">
                        <textarea name="SummaryContent" id="SummaryContent" rows="5" cols="65" ><apex:outputText value="{!SummaryContent}" /></textarea>
                        <div class ="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" id="btnGenerateText" role="button"><span id="generate-text" class="ui-button-text">Generate Text</span></div>
                        <p class="ocmsHelpText">
                            (<span id="charCount">300</span> of 300 characters remaining)
                        </p>
                    </apex:outputText>
                    <apex:outputPanel id="o2" layout="block" rendered="{!disableAll}" style="padding: 5px; border: 1px solid #DEDEDE;">
                        <apex:outputText escape="false" value="{!SummaryContent}" id="DocumentContentViewSummary" />
                    </apex:outputPanel>
                </td>
            </tr>

            <tr class="ocmsEditorSubtitle">
                <td colspan="2">Images</td>
            </tr>
            <tr>
                <td>
                    <label class="ocmsLabel" for="ImageIdInput">Small Image</label>
                    <p class="ocmsHelpText">(used in summary lists)</p>
                    <input type="hidden" name="ImageIdInput" id="ImageIdInput" value="{!ImageId}" />
                    <cms:ImageSelector sname="{!content.cms__Site_Name__c}" cPassThroughId="ImageIdInput" cImage="{!ImageId}" type="Image" disabled="{!disableAll}" DialogId="imageInput1" />
                </td>
            </tr>
            <tr>
                <td>
                    <label class="ocmsLabel" for="LargeImageIdInput">Large Image</label>
                    <p class="ocmsHelpText">(used with article detail)</p>
                    <input type="hidden" name="LargeImageIdInput" id="LargeImageIdInput" value="{!LargeImageId}" />
                    <cms:ImageSelector sname="{!content.cms__Site_Name__c}" cPassThroughId="LargeImageIdInput" cImage="{!LargeImageId}" type="Image" disabled="{!disableAll}" DialogId="imageInput2" />
                </td>
            </tr>

            <tr class="ocmsEditorSubtitle">
                <td colspan="2">Image Accessibility</td>
            </tr>
            <tr>
                <td>
                    <label class="ocmsLabel" for="AltImageText">“alt” Text</label>
                    <apex:outputText escape="false" rendered="{!disableAll}" >
                        <input type="text" value="{!AltImageText}" name="AltImageText" id="AltImageText" size="60" disabled="disabled" />
                    </apex:outputText>
                    <apex:outputText escape="false" rendered="{!!disableAll}" >
                        <input type="text" value="{!AltImageText}" name="AltImageText" id="AltImageText" size="60" />
                    </apex:outputText>
                    <p class="ocmsHelpText"> Image description that will be used by screen-reading software.</p>
                </td>
            </tr>
            <tr>
                <td>
                    <label class="ocmsLabel" for="TitleImageText">Image Caption</label>
                    <apex:outputText escape="false" rendered="{!disableAll}" >
                        <input type="text" value="{!TitleImageText}" name="TitleImageText" id="TitleImageText" size="60" disabled="disabled" />
                    </apex:outputText>
                    <apex:outputText escape="false" rendered="{!!disableAll}" >
                        <input type="text" value="{!TitleImageText}" name="TitleImageText" id="TitleImageText" size="60" />
                    </apex:outputText>
                    <p class="ocmsHelpText"> Optional caption for image in full-article detail view.</p>
                </td>
            </tr>

            <tr class="ocmsEditorSubtitle">
                <td colspan="2">Settings</td>
            </tr>
            <tr>
                <td>
                    <label class="ocmsLabel">Article Detail Page Link</label>
                    <input id="articleDetail" name="articleDetail" type="hidden" value="{!articleDetail}" />
                    <cms:PageSelector cPassThroughId="articleDetail" value="{!articleDetail}" dialogId="articleDetailDlg"
                                      disabled="{!disableAll}" sname="{!content.cms__Site_Name__c}"/>
                </td>
            </tr>
            <tr>
                <td>
                    <label class="ocmsLabel">News Area Page Link</label>
                    <input id="newsArea" name="newsArea" type="hidden" value="{!newsArea}"></input>
                    <cms:PageSelector cPassThroughId="newsArea" value="{!newsArea}" dialogId="newsAreaDlg"
                                      disabled="{!disableAll}" sname="{!content.cms__Site_Name__c}"/>
                </td>
            </tr>
            <tr>
                <td>
                    <label class="ocmsLabel">Detail Content Template</label>
                    <div id="detailContentTemplate"></div>
                </td>
            </tr>
        </table>
    </apex:outputPanel>
</apex:page>