<apex:page controller="cms.CreateContentController" extensions="ec_ContentBlock" 
    showHeader="false" sidebar="false" cache="false" standardStylesheets="false" title="OrchestraCMS content editor">

    <link href="{!URLFOR($Resource.ec_ContentEditorFixes)}" rel="stylesheet" />
    <script src="{!URLFOR($Resource.cms__OrchestraCMSUI, '/selector/content/GWTContentSelector.js')}"></script>
    <script src="{!URLFOR($Resource.cms__OrchestraCMSUI, '/selector/content/ContentSelector.js')}"></script>

    <apex:outputPanel layout="block">
        <style type="text/css">
            .content_table {
                border: 1px solid #cccccc;
                padding: 0;
                margin: 0;
                border-collapse: collapse;
                border-spacing: 0;
                width: 540px;
            }

            .content_table input {
                margin: 0 !important;
                padding: 0 !important;
            }

            .content_table tr {
                border: 1px solid #cccccc;
            }

            .content_table th {
                border: 1px solid #cccccc;
                padding: 5px;
                background-color: #dde8a5;
            }

            .content_table td {
                border: 1px solid #cccccc;
                padding: 5px !important;
                background-color: #ffffff;
                float: none !important;
            }

            .hidden {
                display: none;
            }

            .imageSelector img {
                width: 250px;
            }

            .content_table td {
                vertical-align: top;
            }

            .content_table textarea {
                width: 100%;
                box-sizing: border-box;
                height: 5em;
                font-size: 1.11em;
            }
        </style>

        <table class="ocmsContentEditor ocmsContentEditorNested">
            <tr>
                <td>
                    <label class="ocmsLabel" for="calloutHeading">Heading</label>
                    <input type='text' class="ocmsTextInputLrg" id="calloutHeading" value="{!calloutHeading}" />
                    <p class="ocmsHelpText">Lightning components typically ignore this heading in favour of their own, optional heading.</p>
                </td>
            </tr>
            <tr>
                <td>
                    <label class="ocmsLabel" for="blockType">Type</label>
                    <select id="blockType" class="ocmsLanguageNeutral">
                        <option value="list">List</option>
                        <option value="slider">Slideshow</option>
                    </select>
                    <p class="ocmsHelpText help-blockType type-list hidden">Compatible with <strong>Link Item</strong> content template. Content will be displayed in a vertical list, in the specified order.</p>
                    <p class="ocmsHelpText help-blockType type-slider hidden">Compatible with the <strong>Slideshow Item</strong> content template. Content will appear in a widget that can be scrolled through, displaying one item at a time.
                    </p>
                </td>
            </tr>

            <tr class="hidden type-content for-slider">
                <td>
                    <label class="ocmsLabel">Auto-scroll</label>
                    <select id="sliderTime" class="ocmsLanguageNeutral">
                        <option value="disabled">Disabled</option>
                        <option value="slow">Slow</option>
                        <option value="fast">Fast</option>
                    </select>
                </td>
            </tr>

            <tr class="hiddenNotEver type-content-AlwaysVisible">
                <td>
                    <label class="ocmsLabel">Contents</label>
                    <p class="ocmsHelpText">Note that updates to any of the following content will not be reflected on the live site until a page cache refresh is performed (on pages where this Content Block appears)</p>
                    <div id="contentSelector">
                        <!-- Content Selector widget markup is added here dynamically -->
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <label for="ignoreTargeting"><input type="checkbox" id="ignoreTargeting" /> Ignore Targeting</label>
                    <p class="ocmsHelpText">When checked, the selected content should be displayed regardless of whether the viewing user has matching targets.</p>
                </td>
            </tr>
        </table>


        <script>
            $(document).ready(function() {
                if ({!disableAll}) {
                    // published - no editing allowed, please
                    // ha! OrchestraCMS seems to be doing some of this for us now
                    $('input, textarea, select', $('.ocms-contentPropertiesEdit')).prop('disabled', true);
                } else {
                    ce.content_editor('registerSaveFunction', function() {
                        var attributes = [
                            {"name": "calloutHeading", "value": $('#calloutHeading').val(), "type": "Text"},
                            {"name": "blockType", "value": $('#blockType').val(), "type": "Text", "lang": ""},
                            {"name": "contentIds", "value": $('#contentSelector').content_selector('getSelectedContentIds'), "type": "Text", "lang": ""},
                            {"name": "contentLayouts", "value": $('#contentSelector').content_selector('getSelectedLayouts'), "type": "Text", "lang": ""},
                            {"name": "sliderTime", "value": $('#sliderTime').val(), "type": "Text"},
                            {"name": "ignoreTargeting", "value": $('#ignoreTargeting').prop('checked'), "type": "Boolean"}
                        ];

                        return attributes;
                    });
                }
            });

            $('option[value="{!blockType}"]', '#blockType').prop('selected', true);
            $('option[value="{!sliderTime}"]', '#sliderTime').prop('selected', true);
            $('#ignoreTargeting').prop('checked', {!ignoreTargeting});
            $('#blockType').change(showBlocksForType);
            showBlocksForType('{!blockType}');

            $('#contentSelector').content_selector({
                id_list: '{!contentIds}',
                layouts: '{!contentLayouts}',
                showLayouts: true
            });


            function showBlocksForType(savedType) {
                var type = (typeof savedType === 'string') ? savedType : $('#blockType').val();

                $('.help-blockType, *[class*="for-"]').hide();
                $('.for-' + type + ', .type-' + type).show();
            }

            //# sourceURL=contentBlockEditScript
        </script>

    </apex:outputPanel>
</apex:page>