<aura:component controller="ec_TaxonomyContentViewerController" implements="forceCommunity:availableForAllPageTypes" access="global">
    <ltng:require styles="{! $Resource.ec_Component_Helper + '/css/common.css' }"
                  scripts="{! join(',',
                          $Resource.ec_Component_Helper + '/js/common.js',
                          $Resource.ec_Component_Helper + '/js/svgxuse.js')
                          }"
                  afterScriptsLoaded="{! c.scriptLoad }" />
    <aura:attribute name="SLDSPath" type="String" default="{!$Resource.ec_slds}" />

    <aura:attribute name="ComponentHeading" type="string" />
    <aura:attribute name="contentLayout" type="string" required="true" />
    <aura:attribute name="originId" type="string" />
    <aura:attribute name="siteName" type="string" />
    <aura:attribute name="siteId" type="string" />
    <aura:attribute name="alwaysUseLocalLayout" type="Boolean" default="false" />
    <aura:attribute name="loadedByTaxLoader" type="Boolean" default="false" />
    <aura:attribute name="backClicked" type="Boolean" default="false" />
    <aura:attribute name="ignoreTargets" type="Boolean" default="false" description="Whether to ignore targeting" />
    <aura:attribute name="commentsHeading" type="String"/>
    <aura:attribute name="enableChatter" type="Boolean" default="true"/>
    <aura:attribute name="errorMessage" type="String" />

    <aura:attribute name="feedPublisher" type="Aura.Component" />
    <aura:attribute name="feedViewer" type="Aura.Component" />

    <aura:attribute name="subscribeEnabled" type="Boolean" default="true" />
    <aura:attribute name="likedContent" type="String" /> <!-- duplicated from TaxonomyLoader, should be in its own component -->
    <aura:attribute name="likeCounts" type="Map" default="{}" />
    <aura:attribute name="likedContentList" type="String[]" default="[]" />

    <aura:handler name="change" value="{!v.likedContent}" action="{!c.likeContent}" />
    <aura:handler name="init" value="{!this}" action="{!c.doInit}" />
    <aura:handler name="change" value="{!v.backClicked}" action="{!c.toggleDetail}" />

    <aura:registerEvent name="toggleDetail" type="c:ec_TaxonomyToggleDetailEvt" />
    <aura:registerEvent name="likeUnlikeContent" type="c:ec_LikeUnlikeContentEvt" />

    <div aura:id="contentContainer" class="{!'subscribeEnabled-'+v.subscribeEnabled}">
        <aura:if isTrue="{!v.errorMessage}">
            <ui:message title="Content View" severity="error">
                    {!v.errorMessage}
            </ui:message>
            <aura:set attribute="else">
                <div class="slds-spinner_container hidden" aura:id="loadingSpinner">
                    <div class="slds-spinner--brand slds-spinner slds-spinner--medium" role="status">
                        <span class="slds-assistive-text">Loading</span>
                        <div class="slds-spinner__dot-a"></div>
                        <div class="slds-spinner__dot-b"></div>
                    </div>
                </div>
                <aura:if isTrue="{!!empty(v.ComponentHeading)}">
                    <h4 class="slds-text-title--caps componentHeading slds-truncate"><aura:text value="{!v.ComponentHeading}" /></h4>
                </aura:if>
                <aura:if isTrue="{! v.originId != null}">
                    <div class="contentViewer" aura:id="contentViewer"></div>
                    <aura:set attribute="else">
                        <span class="siteforceBaseInvalidComponent siteforceWarningComponentNoData">
                            <div class="table">
                                <div class="row">
                                    <div class="cell icon"></div>
                                    <div class="cell header">This component loads content based on URL parameters</div>
                                </div>
                                <div class="row">
                                    <div class="cell"></div>
                                    <div class="cell content"><strong>Content View</strong> component was not loaded because no “id” URL parameter was found.
                                        <div class="errorInfo"></div>
                                    </div>
                                </div>
                            </div>
                        </span>
                    </aura:set>
                </aura:if>
            </aura:set>
        </aura:if>
    </div>
</aura:component>